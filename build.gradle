//file:noinspection GroovyAssignabilityCheck
//file:noinspection GroovyAccessibility
//file:noinspection GradlePackageVersionRange
plugins {
	id "fabric-loom" version "1.0.+"
	id "io.github.juuxel.loom-quiltflower" version "1.+" // Quiltflower, a better decompiler
	id "io.github.p03w.machete" version "1.+" // automatic jar compressing on build
	id "maven-publish"
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
group = project.maven_group

// Formats the mod version to include the Minecraft version and build number (if present)
// example: 1.0.0+1.18.2-100
String buildNumber = System.getenv("GITHUB_RUN_NUMBER")
version = "${mod_version}+${minecraft_version}" + (buildNumber != null ? "-${buildNumber}" : "")

repositories {
	maven {
		name 'Shedman maven'
		url 'https://maven.shedaniel.me/'
	}

	maven {
		name 'blamejared'
		url 'https://maven.blamejared.com'
	}
	maven { url = "https://api.modrinth.com/maven" }
	maven { url = "https://mvn.devos.one/releases/" }
	maven { url = "https://mvn.devos.one/snapshots/" }
	maven { url = "https://maven.tterrag.com/" }
	maven { url = "https://jitpack.io/" }
	maven {
		url 'https://www.cursemaven.com'
		content {
			includeGroup "curse.maven"
		}
	}
	maven {
		url = "https://maven.jamieswhiteshirt.com/libs-release"
		content {
			includeGroup("com.jamieswhiteshirt")
		}
	}
	maven { url = "https://maven.terraformersmc.com/" }
	maven { url = "https://maven.cafeteria.dev/releases" }
	maven {
		name = 'Ladysnake Mods'
		url = 'https://ladysnake.jfrog.io/artifactory/mods'
	}
	maven {
		name = "Progwml6 maven"
		url = "https://dvs1.progwml6.com/files/maven/"
	}
	maven {
		name = "ModMaven"
		url = "https://modmaven.dev"
	}
	maven {
		name = 'ParchmentMC'
		url = 'https://maven.parchmentmc.org'
	}
	maven { url "https://maven.bai.lol" }
}

dependencies {
	minecraft("com.mojang:minecraft:${project.minecraft_version}")

	mappings loom.layered {
		it.officialMojangMappings()
		it.parchment("org.parchmentmc.data:parchment-${project.minecraft_version}:${project.parchment_version}")
	}

	modImplementation("net.fabricmc:fabric-loader:${project.loader_version}")

	modImplementation "me.luligabi:NoIndium:${no_indium_version}"
	include "me.luligabi:NoIndium:${no_indium_version}"

	modImplementation("me.shedaniel:RoughlyEnoughItems-api-fabric:${project.rei_version}")
	modImplementation("me.shedaniel:RoughlyEnoughItems-fabric:${project.rei_version}")

	modImplementation("mezz.jei:jei-${minecraft_version}-fabric:${jei_version}")

	modImplementation("dev.architectury:architectury-fabric:${project.architectury_version}")

	modImplementation("dev.onyxstudios.cardinal-components-api:cardinal-components-base:${cardinal_components_version}")

	modImplementation("com.simibubi.create:create-fabric-${project.minecraft_version}:${project.create_version}+${project.minecraft_version}")

	modCompileOnly("curse.maven:cc-restitched-462672:3723736")

	modImplementation("appeng:appliedenergistics2-fabric:${project.ae2_version}")

	modImplementation("com.tterrag.registrate_fabric:Registrate:MC${project.minecraft_version}-${project.registrate_version}")

	modApi("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_version}") {
		exclude(group: "net.fabricmc.fabric-api")
	}

	include modApi('teamreborn:energy:2.2.0') {
		exclude(group: "net.fabricmc.fabric-api")
	}

	// dependencies
	modImplementation("net.fabricmc.fabric-api:fabric-api:${project.fabric_version}")
}

processResources {
	// require dependencies to be the version compiled against or newer
	Map<String, String> properties = new HashMap<>()
	properties.put("version", project.version)
	properties.put("loader_version", project.loader_version)
	properties.put("fabric_version", project.fabric_version)
	properties.put("create_version", project.create_version)
	properties.put("minecraft_version", project.minecraft_version)
	properties.put("java_version", sourceCompatibility)

	properties.forEach((k, v) -> inputs.property(k, v))

	filesMatching("fabric.mod.json") {
		expand properties
	}
}
machete {
	// disable machete locally for faster builds
	enabled = buildNumber != null
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = Integer.parseInt(sourceCompatibility)
}

java {
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}" }
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
